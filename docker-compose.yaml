version: '3.7'

networks:
  kafka:
    name: kafka
volumes:
  cache:
    driver: local
services: 
  
  zookeeper:
    image: confluentinc/cp-zookeeper:4.1.0
    container_name: zookeeper-ohlc
    networks: 
      - kafka
    environment: 
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka:4.1.0
    container_name: kafka-ohlc
    networks: 
      - kafka
    depends_on:
      - zookeeper
    environment: 
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports: 
      - 9092:9092
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 10s
      timeout: 20s
      retries: 5
  redis:
    image: redis:6.2-alpine
    container_name: redis-ohlc
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    volumes: 
      - cache:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 30
  calculation-service:
      container_name: calculation-app
      build:
        context: .
        dockerfile: Dockerfile.calculation
      networks:
        - kafka
      env_file:
        - "calculation-service/package/config/local.env"
      depends_on:
        kafka:
          condition: service_healthy
      # environment:
      #   - REDIS_CONNECTION=redis://redis:6379
  summary-service:
      container_name: summary-app
      build:
        context: .
        dockerfile: Dockerfile.summary
      env_file:
        - "summary-service/config/local.env"
      environment:
        - REDIS_CONNECTION=redis://redis:6379
      depends_on:
        - redis
      ports:
        - 50051:50051
  request-generator:
      container_name: request-generator
      build:
        context: .
        dockerfile: Dockerfile.req-gen
      depends_on:
        - calculation-service
      networks:
        - kafka



