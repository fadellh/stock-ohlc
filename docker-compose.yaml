version: '3.7'

networks:
  kafka:
    name: kafka
  redis-networks:
    driver: bridge
volumes:
  cache:
    driver: local
services: 
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    container_name: zookeeper-ohlc
    networks: 
      - kafka
    environment: 
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:7.3.1
    container_name: kafka-ohlc
    networks: 
      - kafka
    depends_on:
      - zookeeper
    environment: 
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

    ports: 
      - 9092:9092
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 10s
      timeout: 20s
      retries: 5
  app-redis:
    image: redislabs/redismod:latest
    container_name: app-redis
    ports:
      - "6379:6379"
    networks:
      - redis-networks
    restart: always
  calculation-service:
      container_name: calculation-app
      build:
        context: .
        dockerfile: Dockerfile.calculation
      networks:
        - kafka
        - redis-networks
      # links:
      #   - redis
      env_file:
        - "calculation-service/package/config/local.env"
      environment:
        - REDIS_CONNECTION=redis://app-redis:6379
      depends_on:
        kafka:
          condition: service_healthy
  summary-service:
      container_name: summary-app
      build:
        context: .
        dockerfile: Dockerfile.summary
      env_file:
        - "summary-service/config/local.env"
      environment:
        - REDIS_CONNECTION=redis://app-redis:6379
      depends_on:
        - app-redis
      networks:
        - redis-networks
      ports:
        - 50051:50051
  request-generator:
      container_name: request-generator
      build:
        context: .
        dockerfile: Dockerfile.req-gen
      depends_on:
        - calculation-service
      networks:
        - kafka



